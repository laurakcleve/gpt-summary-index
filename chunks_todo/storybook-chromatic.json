[{"text": "Welcome to Swashbuckling with Code. I'm Jimmy Cleveland, and I'm pretty hyped for today. I'm going to be showing Chromatic from the Storybook group, and I'm going to be setting that up from scratch from a like brand new Create React App project just so you can see what setting that up looks like, and I did make some mistakes along the way, just letting you know, and I left those in. I tried to chop them up for the sake of time so that you could still see them, but you know, you weren't there for the whole slog of me troubleshooting things because, you know, coding in reality is really clean, and I think people can learn from it, so I leave those things in just so that you know. Oh, and I will have timestamps, so be sure to use those if you want to skip the troubleshooting and just get to the interesting parts. Now, if you're not familiar with what Chromatic is, it is a visual regression test suite, which, if you're not familiar with that term either, it's essentially a way to have, if you have a user interface, let's say you have a component library or something like that, in Storybook probably, and you will, whenever you push those changes up, it will take screenshots of each of your components or each little unit in your UI library, and it will do a diff or comparison between those, and it will let you know when things change, maybe the layout shifted or the colors changed or anything like that. So it's pretty cool to kind of alert you in an automated way so you can skip some of the manual user testing where people, you know, make mistakes and miss things and bugs get into, you know, real production deploys. So that's what it does. It's a huge time saver, and it's a fantastic suite. I'm really impressed with the polish of the user interface and the setup, and I think the rest of it will speak for itself. So let's just get to it. All right, so I have started with a Create React app, a brand new app. You can use your framework of choice for this. It's just pretty common with a Storybook. And then what we're gonna do is we're just gonna spin up a Storybook 6 real quick, and if you go to install, they'll tell you that you can use this MPX SB init. So MPX SB init. What that's gonna do is it's going to detect your framework or project choice, and it's going to set it up for that specific one, which is really cool. They support a lot of the major frameworks at this point, so they've been doing a great job with that. All right, well, it's finished now, and you can see it'll allow you to run Yarn Storybook, and we might as well, just to see if it works there. And then from this point on, what we need to do is go over to Chromatic, since we have our Storybook that should pop up any moment here, and on their home page, there's a Get Started Now button. And that was funny. It jumped me over to my Storybook. So here's the Storybook, just so you can see real quick. And this is what it starts out with. It just has\u2014the thing you'll want to notice is that it has a button component, and that has a primary, secondary, large, etc. And there's a lot of cool stuff in Storybook 6, but I'm not going to go over in this video. This is specifically for Chromatic. But the also thing that you'll want to notice is there's a header component that's using those buttons, depending on if you're logged in and logged out. That will come into play in a moment. So let's jump back over to the Chromatic experience. I've only done this a couple times, so bear with me. Once on GitHub, once on Bitbucket. I have to say the Bitbucket experience was not nearly as good as GitHub, though it was fine once I got it set up. It's just there's too many reloads that are required to see updates, and GitHub's really good about those live updates, which you'll see in a moment. So we're going to say, okay, we want to set up a project from GitHub, right? So that means that what we need to do is hop over to GitHub, create this new project that we just did. So we'll do a new repo here, and we'll just call it Storybook Chromatic. And we don't need anything since it's for demo purposes. I'll create that repository. And then what you can do is you can actually just, depending on your terminal, copy paste these things. Actually, we have not edited this yet, have we? So we probably need all of them. So let's go back to the terminal. What is this crazy nonsense? I've never seen this before. All right, that's very interesting. So git add everything, git commit dash m, and then we'll say initial commit with Storybook. You'll see the commands right here. So set the branch domain, add the remote, and then push it up. Oh, yes, I need to configure my permissions. One sec. Okay, that should work. I have a different SSH key for this one. I forgot about that. All right, now it's pushed up. And then that will allow us to go back over to here and say, choose from GitHub. And from this point on, we should be able to pick one of these repos. Now, this is kind of interesting because it doesn't show my repo, probably because when I clicked it, I didn't have it, but you should be able to just refresh, go back into this. Maybe not. Let's see. Let's try and just search it in. Usually that pops up there. But let's make sure that I did it right. Odd. Okay. No big deal. So in this project, it auto set up with yarn for me. So I'm going to switch it over to yarn, which is cool of them to do that. And they're going to want you to add this to your project. So we'll do that real fast. And while that's going on, it's adding chromatic. We want to publish to Storybook. That's done. We'll paste into here. And they're giving us our project token here. I'm going to remove this project anyway, so I don't care about sharing it there if it is like a secret thing. Let's see if this goes through. Let's hope. You'll notice that it's building Storybook right here, which is cool. That's just to like test to make sure it runs. But then it's going to publish your Storybook. So this is actually a really cool thing about chromatic is that it also hosts your Storybook. And the important part is that it versions it so that each time you make changes, you can see whatever your live one is versus the changes that are in flight. And when people are reviewing it, you might want to show like a demo version to someone. And that's really awesome that they just give you that kind of like the Netlify experience. So no chromatic script found. Yes, I would love for you to add that to me. And that's just going to make, let me show you that, package.json, this chromatic script, which is going to add our token right there. Okay, so that's done. So we should be able to go back to the browser here. And notice that the step has been updated. And it's showing us that we have three components, eight stories, etc, etc. And this is the commit. So catch a UI change. So what this is going to tell us is that like we can change something about one of our Storybook stories. And we can then see the change as soon as we push it up with this chromatic script. So let's jump over to stories. Let's go to button maybe. And then I'm going to add to button. Woof, just a big long woof for no reason. And we will need to commit that I imagine you might be able to just push it up, but I'll commit it. And then let's take a look at what's changed here. So we have a log from building, I guess. What if we want to ignore that or push that up. And then our package JSON changed, our yarn lock change and our button change. So I'm fine with all those. That's fine. And we'll say update button to have bug. Why not? And then git push origin. Well, I guess we can just do it on main this time. We'll do another pull request after. OK, so now we'll run yarn chromatic and push that up. It's going to automatically use the token since that's in there. And then we should be able to just jump over to here and wait for this to be updated. Unless we have an error, of course. You can see that it detected the change, which is really awesome. I wonder why that was wiggling. Is that saying that that one specifically changed? Maybe just trying to show you that you can click it. Yeah, so we have eight changes, which is pretty cool. So we'll look at the button. And this is your first example of this visual regression here. Highlighted in green is the change. And there's some pretty cool features here where you can turn the diff on and off if you just want to see how it looks. And then you can also this is fun. You can turn the strobe on. And I'm guessing this is in case you have a hard time noticing just the green because it's like a small change or something like that. But, you know, it could also be because you have a fun feature and you want to party. But then you have the focus diff. I don't know if that's as useful, but I'm sure it has some use. And then we'll just say, yeah, we were cool with that change. This is interesting. They're typing as me just to show like, hey, you can have a conversation here. And, you know, once you've resolved the issue, you can mark it as resolved, which you'll see a little bit more once we get to the real thing. This is just a tutorial here. Yep. Sounds great. This this is kind of important here. So as far as I remember, this didn't used to be free for all the for the beginning plan. I think they were all paid plans. I'm not sure about that. But what's cool about it regardless is that you get your storybook publishes for free on their CDN. You also get 5000 free snapshots here. And that's kind of important is that you'd probably that would be fine, I think, for most people, especially just to try it out. So it's awesome to let them do that. And then there are enterprise plans. If you want to have a lot more and more cross browser support and all that. So now let's go to the components. They're letting you know that you can invite team members to this space in particular. We're good for now. Go away. And then publish. We don't need that either. Not just yet.", "title": "Visual Regression Testing with Storybook's Chromatic", "url": "https://www.youtube.com/watch?v=jz-vpFBilhs"}, {"text": "Okay. So let's take a look at this before we add it into pipeline build stuff. So we can see that we've already accepted this change, right? And then here's me as the reviewer. So what I can do is I can either batch, accept all of the changes, or I can just review them individually. And this is really neat. So we have kind of the same UI as before. We're showing the before and after of the button. And this one is the secondary button. That's why it's not blue here. So it's going through each button that was affected by it. And we'll say that we just accept this one. And then just so you can see real quick, there's another feature here that's on this view that I really like. It's called one up. And the one up is really interesting. It's a strange term for it, but you kind of figure it out quickly and notice that it's laying it right here. And if you switch, you can switch between them and it might help to just do like turn the diff off and the switch between them. So this is like, you know, you can lay two UIs on top of each other to see like how much did it shift? Because it might be hard to notice the shift when you're doing side by side. So you could usually probably stick to this and be fine, but that's a really neat feature. And it also shows the code diff, which is cool with the highlight. Just a real fantastic UI. Honestly, it's so exciting. Okay, so let's keep going. So we'll say, yeah, we accept that. We accept that. And this is an interesting point. Now we're getting to the header and the header is showing that it has changed as well. Now this is in particular what makes this tool interesting to me. So I have a pretty large scale project going on with the design system, component library, all the stuff like all the cool kids are doing. And it can be really hard to notice when you've changed a small atomic component or like an alignment or something like that. And it kind of cascading to other components. So sometimes it's difficult to catch little subtle changes like that, or even big ones. It's just a lot of stuff to check. So this is kind of showing you that this component is used in other components, and it affected them. So you need to know that. That is awesome. So we'll accept this time we're going to accept all of them. It's just going through each one. Except cool. So now we've accepted all of them. And we have this, you know, build passing, you can go to each of your builds here, build one and build two. So you can actually go you know, back in time, you can look at the git commit, which is really neat. And then you can also go to the actual build itself and see all the individual components. So it's going to show us that every time, which is awesome. So let's go back to how to go back to the dashboard. Is it here? No, back in the project. Oh, you go to the build, of course, silly me. So now that we're in this build, that is cool and all. But what's makes it really interesting to me is the continuous integration setup. So if you click this right here, finish setup by configuring to publish storybook automatically. They will take you to your continuous integration. If you're not familiar with that, it's essentially just like tools within your whatever your repository of choices typically, it could be outside of that as well. But if you've ever heard of Travis or GitHub actions or Bitbucket pipelines, it's that type of stuff. And it's allowing you to run tests, every commit, essentially, or builds or anything like that, or every pull request you get to choose. So this is really awesome, because it helps you when when people push up code changes to just automate the manual steps that are just ripe with human error. So let's set that up. So you can see it's really neat. So here we want to go down to probably GitHub actions. And I'm not sure if I actually need this script here. So I'll change it. I feel like this script actually doesn't work. Let me actually get the code. I'll get the whole line. Because this chromatic project token, I don't know how this would pick up the environment variable because you'd have to actually declare it in the step. I was messing around with this before and I had a hard time in a Bitbucket. I had to actually set it up differently. But I'll add it just in case. So let's go back over to our code, because it might need it in the pipeline, however, they've set it up. So that the whole thing. So we're going to replace this script right here now. And what's what's different about this is now we can't just run chromatic like locally, unless we set up like an ENV and point it to that. But we won't worry about that for now. So then you're to come down to GitHub actions. And they have a workflow setup for you. But they also have a GitHub repo that has some of the action information. So you can scroll down here. And yeah, same type of stuff. I think one of them shows you something different. I had to go back and forth between them for a little bit to figure out their particular actions. But let's just copy this whole thing. And you can see they wanted to put it in git.github slash workflows directory under chromatic YML. So whenever you're doing GitHub actions, that's pretty typical. You'll say new, we can do a file. And we'll say dot GitHub slash workflow slash chromatic dot yml. So what that did is make these two folders and then this file. All right. So then we could leave this on push, we might want to swap to pull request only. But maybe let's try and just leave it on push for now since that's their default. Typically, I would do that just on pull request. Okay, so we'll just push up this change. So add GitHub, whoops, GitHub action for chromatic. Boom. Now you'll notice in particular that we need this project token here. Okay. And this is just your GitHub token that should come along for the ride already. But we do need to set this part up right here. So I'm gonna copy this string. So I'm gonna need it in a moment. And let's push up. That's interesting that it said this failed. Oh, it probably failed because yeah, exit zero on changes. If it fails the actual like there are changes to detected visual regressions, then you can consider it a fail in the script or not. It's up to you. So git push origin main for now. And then what we want to do is hop over to our GitHub. Where is that goodness. And in our project, you can go to settings. And this is just GitHub actions at this point, not specific to chromatic. But then you can add a new repository secret. This is where we paste the name of it. And then what we're going to want is our project token, I could just do a history check. But here we go. This is it. Okay. Hope that's it. Paste that right here. And then that's just going to be available now as like a secret token to GitHub whenever it's running actions. Okay. So I think we've got all that set up. Let's go back to chromatic and see if they have anything extra they want us to do. So here's the setup for that. You'll need to configure secrets and a new browsing window navigate to GitHub repository. Yeah, they're okay. That's cool. They're telling you how to set up your secret. Let's actually just make a PR and see if it works. Let's try that. So what I'm going to do is I'll go back to button. And then I will delete this change here. Okay. And then what I'll do is I'll check out a new branch. And we'll call, you know, remove button text bug or something like that. Whatever. Let's look at the diff. Okay, add that. And we'll call it remove button text bug. Now we'll push that up to this branch. And it's actually supposed to run on pushes. I'm curious if it will, but I've only ever seen it run on pull requests. So I kind of wonder what's up with that. Let's see if it's done anything here. I don't see anything. Okay, let's go back over to GitHub. Right here. And if we go to our code, you know, GitHub is awesome. And it'll be like, Hey, you have a branch that has, you know, push some stuff up. Do you want to make a pull request? We Yes, I do. And we'll create that pull request. And we'll see if our action fires crossed fingers. The first time that you do this, this is pretty common for it to just kind of show up as nothing, you might want to check out the actions tab and see if it's running. Doesn't seem like it is we might need to set up the app for it. Let me troubleshoot this real fast. Visual Test enabled collaborators, GitHub repository. It's possible that it already had the app added under applications here authorized. Oh, yeah. I wonder if I needed to remove this for the demo purpose, because I already had this from testing it out once. Now this is just authorized in general. First, I'll cross reference their GitHub one and see if that's different than mine. Let's actually do this and grab the code here. And let's look at our actions file. You know, nothing can ever go smooth, especially when you're live demoing, runs yarn, deploy to chromatic with that looks right. Well, let me just try and change this to pull request. And we'll do just do it on the same branch we're already on it should update automatically pull request. Go back to our pull request here. That's been updated. I don't see any action.", "title": "Visual Regression Testing with Storybook's Chromatic", "url": "https://www.youtube.com/watch?v=jz-vpFBilhs"}, {"text": "It's firing. Ooh, I wonder, is it possible that my name is wrong? workflows.github slash workflows. Did I do workflow? Dang it. I should have copied it. Oh, that's funny. Okay, we want to rename that to workflows. And I switched it to pull request. So hopefully that still works fine. Goodness. All right. Hopefully, that's it. Yeah, delete and update. Go back to our pull request. I guess maybe I could just try and merge this. Let's try this again. So we now have an action, we should be able to go to main. Hold down. Test branch. Since we don't care about the name, particularly right now. Let's go back to button. And we'll text before it just to see. And that's actually going to run into it. But whatever. Add a bug. Yep, here's a new PR. Let's create that PR. Please work. No. Oh, there we go. I guess I just had to merge it. That one time I thought it would automatically update the pipeline without merging it into main. So that's kind of weird. So here's add a bug. You can see our action finally working chromatic deployment. And let's go back to that. And you'll see this is probably just because this is the first time this has ever run. Okay, now we're finally deploying. And you can see that it has. Let's see build storybook output dir. Okay, so it's not showing. Oh, yeah, here's project token. So it is actually grabbed it and it just shows the end of it. So that's cool. Let's go back into the PR here. And we can actually see what's really neat here is that it has this like tests that it's running that's pending. And what it's going to do is see pending a changes must be accepted as baseline. So there you go. So this is really neat. If you were to click this, it'll take you to the individual pipeline. But this right here, one, if you click this, it'll take you to a deployed storybook for this version. So if you want to send that out, like in the middle of it, this is the actual one with the changes that you've made that hasn't been merged into, you know, your main branch or anything yet, or your main storybook. That's so cool. Okay, now go back to here and then UI tests. So if we click this, you can actually make this like a blocking action. At least you can on Bitbucket. I'm pretty positive you can on actions for GitHub. But you can make this blocking to where like, you can't merge this until this has been accepted if you want to. So now, this is really neat, because you let's say you added like your designers or something like that, or project manager or whatever to this project in particular on Chromatic, you don't have to worry about them, you know, messing with repos, or even having access to a GitHub account or Bitbucket or whatever you're using your GitLab. And you could just have them just on this part of it just on the review step. And just add that to your continuous integration pipeline. So I think that's really cool. So now you can see here that we have this build, right? But if we go over to PRs, they'll say install Chromatic on GitHub. Okay. Which I should have already had, but let's see. Okay, that's this one, approve. And then now that we have this set up, it'll actually have another step. See that UI review. So we'll have another step here for just the pull request in particular. There we go. Okay. So now that this has been pushed up, review the UI change set in each pull request. Now these nice little GIFs here. It's really nice. I mean, this is just such a polished UI. I'll do that I'm good since I've seen it before. So here they have a link, if they want to just view it on GitHub, and they want to like see if the changes just in case it's other developers or whoever, could be anyone. And then you can assign reviewers just like regular PRs or assign yourself, it automatically has me as a participant here. And then here, they'll give you a quick little, like scene of Oh, here is the visual change. And so now if you look at components, they just have each of those. And then you can go to change sets. And you can just scroll through and see all the different changes here that have happened in this pull request. Isn't that cool? So now, you know, you go to activity. And let's say we want to look at each of these things. You can just say, Okay, I approve this PR. Now you might be thinking, Okay, well, what if I want to like individually deal with these issues? Well, they have a couple different avenues for that. So in the we're in the PR tab, you can leave a comment on something. So you can say, Yeah, I don't know about this looks funky. And then comment. And so now this discussion will have started. And you know, if I add someone else, of course, let's say they reply and go, it should be funky. Good, sir. Okay, cool. And you notice there was a reply and resolve there, or you might not have, but I wanted to show you if you go back to activity. This is the activity for the whole thing. Let's add one more, actually. So let's go to change that. Let's go down here. Yeah, look in spish. Comment, boom, go back up here to activity. And you'll see that we have these, it'll tell you for the story that there's like a conversation going on here, you can just view the change. Or you could just resolve it right here. So you can just say, Okay, or you could just resolve it right here. And so that's what's really neat is like, you know, you can just say, I'm closing this or whatever, you know, and let them know, like, yeah, this looks good, or wait for them, you know, to approve it. Maybe this is your designer saying, maybe you want to adjust this thing. And we'll say, Okay, well, can we just like push this up for now? We'll do another push. And they'll be like, Yeah, cool. So now you could say reply, resolve, beautiful. And then you could resolve each of these things individually. And that's cool, because then you can still see the conversation that's happened. I love this UI, it's fantastic. You know, it's really hard to cram all this information into a sensible UI. You know, I wouldn't say it's perfect, there's, it took me a little bit to learn. But you know, it's, I think it's pretty dang good, personally. So I expect to learn a little bit on every new tool. And I think they've done a fantastic job there. So now you can see that this has been unreviewed for the build, but also the PR. So now we'll say, Yep, we're good. I approve this PR. So that's step one, just the PR itself, go back to here. And you'll see there's a little checkmark here automatically, I didn't have to reload or anything like that, letting me know, okay, whoops, this one, UI review. So the storybook has been published, we have a UI review. And now we're just pending on the UI tests. So now I go there to the build. This is the only part that I think could probably use some improvement here. It's not super intuitive going from like the PRs to this build to knowing to go to build three, they've done a decent job, I figured it out, you know, and that says something, but it'd be kind of cool if you knew there was, I don't know, some sort of like more global set of things still required, maybe a little more prominence. Maybe that's just me. Okay, now we're in the usual business here, where we go through and we approve each of these things. So what I'm actually going to do here is say, you could do it from here, you can just do a check, if you want to, like, for whatever reason, you probably should look at it, but whatever. Isn't this cool? Like it's showing you like how many were accepted, how many weren't. And what's neat about this is you could be like, nah, I don't think so on this, this small one in particular, I don't like it looks fine on the rest. And then let's just say, you know, the rest of these are good. But notice, did you see that right there? It's all flashing. Isn't that cool? So now this has one change denied. And of course, if you're the developer, you could click on it and just go right to it and see, oh, well, why was this denied? That's weird. So I don't know if you can have a conversation on this level or only on the PR level. I mean, that would be cool. Let me see if there's anything like that. What's this? Undenied. Okay, that's neat. I guess maybe that would be nice if the individual things could have a comment. Maybe I'm just missing it. But either way, you can see it on the pull request, so I think that's fine. So then let's see, they could go and change their code in their GitHub. Oops, I got too many things open. Oh, that's right. We were here. So now they could go back and we could just make another change and be like, all right, well, things were messed up. You know, we don't like the way that that behaves. We'll just change that. We're on the same branch at this point, test branch. We'll edit, we'll say, fix the bug or whatever. And push that up. Oops, test branch. Origin, how did that happen? I can just do test branch, can't I? Because I said it already. Nope. Weird. Go back to here and then these should run again. I think it will auto reload here. Yeah, okay. I wasn't sure if I had to reload for the initial one. Okay. So now this deployment's in process. I'll fast forward here real quick for you.\n\nOkay. Now they finally popped up here. So yeah, this is pending, pending. So that's where we need to open this again. And this time we'll just approve it. And I'm curious if it actually, it does seem to keep the old log maybe? Interesting. Is this part of the same build because it hasn't been approved yet? I wonder if that's why. That's awesome that it has this like history here. Okay. So let's say, yeah, we, oh, the PR has already been approved. So it's really just this part that failed. That's all making sense. Okay. So this time we're going to batch except all, because I know they're good, but I'll just take a look just so you can see. Yeah. Fixed. Lovely. I mean, I just want to just go again because that part's fun. Cool. Okay. I've had my fill. So go back to this and these have all been accepted. And at this point, our PR can be accepted and we will merge it. Boom. Merged and closed. And then if we go to our PR's tab, we'll see that they are not open and there is a closed one now. What is this? Helps you collaborate UI engineering, PMs, publish UI components and track commit activity each pull request to make visual. Is this what I've already done? I think this is what I've already done. I just haven't seen the screen yet. Yeah. Cool. All right. Close that. All right. I think that sums this up pretty well. The last thing I just wanted to point out, just a real quick peek here is that you'll notice that they do have cross browsers that you can add. I believe these are only on the paid plans, but I haven't tried it out yet, but it was included in them. So I figured that was the case. And then also you can see that they also have these links to your storybook. So you obviously get that hosted, like we talked about before, your little chromatic library, but they have Slack notifications and Slack notifications and integrations and all that stuff too, or just generic webhooks. So they've got some pretty cool stuff going on. And for this team, like the storybook team in general, I don't know what group of engineers from storybook are working on this one or for it's, you know, other groups or whatever, but typically storybook advances really fast. They have lots of great new innovations all the time. And they usually do a pretty good job of also like making that update as painless as they possibly can, because they are innovating quite a bit. So you can see that a lot of cool things are coming. And I think that that's a pretty good overview overall of this entire system. And I'm really impressed so far. I really like it. I can't wait to try it out on my own project at work and on my personal projects as well. I'm going to be just testing it out and playing around. I'll let you know if I have any like interesting updates from it or anything like that. But there you go. Hopefully that was pretty cool and inspired you to check out Chromatic.", "title": "Visual Regression Testing with Storybook's Chromatic", "url": "https://www.youtube.com/watch?v=jz-vpFBilhs"}]