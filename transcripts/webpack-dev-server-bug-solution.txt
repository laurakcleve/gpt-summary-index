

Hey everyone, I have a quick bug solution for you for Webpack Dev Server, currently not working correctly in Webpack 5. So a few viewers of my videos, thankfully, have brought it to my attention that it's currently not working for them. And it was working in all of my setup videos that I did it for, but what I ended up tracking it down to and realizing was that it's an issue with Browsers List. So when you have a Browsers List, it seems to break the live reloading, and I want to show you that bug real quick. So I'm just going to run my start command, which runs Webpack Dev Server, and then here, what I'll do is I'll bring this over here and try to reload this, the server. And normally you would see live reloading here, and just to show you real quick that that does indeed not work correctly, go to the styles file here, and we'll change this to purple real quick. And then switch back over, and you can see it didn't work at all, but if I reload it will work. So let me show the solution to this, and then I'll give you a little bit of information. I've made a repo for some of the projects that I've been working on during this Webpack thing, so I'll link that in the description as a reference code. But let me show you real quick some of the solutions that I've gotten into. So this Webpack config right here, this is just a CSS project, but in general, it's caused by the existence of this Browsers List RC being there. And I guess it's kind of funny, on my work projects I have Webpack 4 still, and the Browsers List and live reloading and all that stuff works great. But I guess I haven't been using Dev Server, or I haven't added a Browsers List with my Dev Server one on Webpack 5, so it just kind of slipped past me. Sorry about that. So what you can do here, let me actually show you, if you go down to this target variable, the first solution is just to set this to web. So web is the default target here if you don't include it at all, but when you have a Browsers List or you have it in package.json, either or will break it, it switches over to that Browsers List, but it doesn't seem to be doing it correctly because I think it's the new array functionality that is allowed in the target. But just to make this a quicker video without getting into too many details, I just want to show this working for the server restarting. So if I just do that, and I do restart, that will fix it. Let me just show you that. So I reload here, you can see it says live reloading enabled, and then if we were to go back to, of course, our styles and change this to purple, and then save and switch over, it's already reloaded. Now, the problem with this that I'll show you is that setting it that way makes it completely ignore the Browsers List, which is possibly not what you want. So if I were to do npm run build now, that will build my production build, and what I want to show is that if you open IE, which is one of the things our Browsers List is supporting here, so this is my IE and then the side by side of the inspector, and IE 11 in this case, so you can see that it has this syntax error here, and this is caused by the transpiling not working correctly. So in order to fix this, there's an overall solution that you can do here in Webpack Config, sorry, my brain's all over the place today, where this is the way that I ended up doing it, and this is a pretty decent fix for now. It works for me, and then you can see if you can come up with something that might work better for your situation, but I think this is okay for now. So what I do is I create a target variable that's just like the mode one here, and then I do a check for production being the node environment, and however you want to set your environment variables, that'll work, and then if it is production, we're going to point to Browsers List as the target. Otherwise, we'll set it to web. So what that will do is when we're in development, we don't really need the fallbacks or anything like that. We're probably debbing on Chrome or Firefox or our latest browser, and so we're fine with dev server, and then when it actually builds production, it'll point it to Browsers List properly. So let me show that real quick, but what I'll need to do here is remove that and then put that back in, and then if I run a build real quick, come back over here to IE. Oh, that's so annoying that I have it split like that. If I reload here, you will see that it takes a second, but then it actually does run all of the transpiled code, and we're not going to have live reloading or anything like that here, but it's just kind of like a minor sacrifice. You're probably going to be doing all of that live reloading checking in your actual Chrome browser. So in this one, with this setting, just to finally tie this all together, I could do npm start, and I'll show that if we have the local host 8080 running here, we do have live reloading enabled still, and that's all done just as a final little reference here. The package JSON, I have it set to, if you haven't seen it from my other videos, node environment equals production webpack, and then when I am running start, that does webpack serve, and so that's why I'm manually setting production, and then that will build it out using the Browsers List. So that's the fix in general, and there's an issue here that you'll want to take a look at. I'll link this in the description as well. It's already closed, and they're planning to merge it in, and the last mention here was someone said, is there any update on this bug 14 days ago, and they said you can try it in beta, but they're working on a release coming up soon. So hopefully that'll be fixed soon. I thought maybe I wouldn't even need to make this video, but I noticed that they also said that they were going to merge the fix back in November somewhere here, so I figured just in case it takes too long, I'll make this quick video, and hopefully that will make Webpack 5 still usable for you for the time being, but I imagine that fix will come pretty quickly. So finally I have the repo here just so you can see, and this will be true for, I'll link this on my other videos, but this one is the SAS post CSS branch, which is what I'll link to, and each branch is a different Webpack configuration. So I've got a TypeScript one and a main one, et cetera. So if you want to come into here and look at the setup that I just showed, you can use this as a reference. So hopefully that solution works for you, and I'm sorry about missing that, but another day in the life of a web developer, right? So I'll see you on the next one.